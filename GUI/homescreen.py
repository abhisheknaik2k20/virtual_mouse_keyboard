# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'homescreen.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import subprocess

from PyQt5.QtCore import Qt


class Ui_HomeScreen(object):
    def setupUi(self, HomeScreen):
        HomeScreen.setObjectName("HomeScreen")
        HomeScreen.resize(662, 428)
        HomeScreen.setWindowFlags(Qt.WindowStaysOnTopHint)
        self.centralwidget = QtWidgets.QWidget(HomeScreen)
        self.centralwidget.setObjectName("centralwidget")
        self.Frame = QtWidgets.QWidget(self.centralwidget)
        self.Frame.setGeometry(QtCore.QRect(0, 0, 661, 401))
        self.Frame.setStyleSheet("background-color:rgba(18, 210, 145, 0.8);")
        self.Frame.setObjectName("Frame")
        self.label = QtWidgets.QLabel(self.Frame)
        self.label.setGeometry(QtCore.QRect(30, 40, 281, 51))
        font = QtGui.QFont()
        font.setPointSize(25)
        self.label.setFont(font)
        self.label.setStyleSheet("color:rgba(255, 255, 255, 255);")
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.Frame)
        self.pushButton.setGeometry(QtCore.QRect(40, 140, 121, 131))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.Frame)
        self.pushButton_2.setGeometry(QtCore.QRect(190, 140, 131, 131))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.Frame)
        self.pushButton_3.setGeometry(QtCore.QRect(350, 140, 131, 131))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        HomeScreen.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(HomeScreen)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 662, 26))
        self.menubar.setObjectName("menubar")
        HomeScreen.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(HomeScreen)
        self.statusbar.setObjectName("statusbar")
        HomeScreen.setStatusBar(self.statusbar)
        self.pushButton.clicked.connect(self.handgesture_detection)
        self.pushButton_2.clicked.connect(self.virtual_mode)
        self.pushButton_3.clicked.connect(self.presentation_mode)
        self.retranslateUi(HomeScreen)
        QtCore.QMetaObject.connectSlotsByName(HomeScreen)

    def handgesture_detection(self):
        # Terminate any existing subprocess
        self.terminate_subprocess()

        script_path = "D:\python\Python_Mini_Proj\VMouse.py"
        self.handgesture_process = subprocess.Popen(["python", script_path])

    def virtual_mode(self):
        # Terminate any existing subprocess
        self.terminate_subprocess()

        script_path = "D:\python\Python_Mini_Proj\VKeybard.py"
        self.virtual_process = subprocess.Popen(["python", script_path])
        return_code = self.virtual_process.poll()
        if return_code is None:
            print("Virtual Mode started successfully")
        else:
            print("Virtual Mode failed to start")

    def presentation_mode(self):
        # Terminate any existing subprocess
        self.terminate_subprocess()

        # Method to handle presentation mode button click
        print("Presentation Mode button clicked")

    def terminate_subprocess(self):
        # Terminate existing subprocess if any
        if hasattr(self, 'handgesture_process'):
            self.handgesture_process.terminate()
        if hasattr(self, 'virtual_process'):
            self.virtual_process.terminate()

    def retranslateUi(self, HomeScreen):
        _translate = QtCore.QCoreApplication.translate
        HomeScreen.setWindowTitle(_translate("HomeScreen", "MainWindow"))
        self.label.setText(_translate("HomeScreen", "Hello, "))
        self.pushButton.setText(_translate("HomeScreen", "Handgesture\n"" Detection"))
        self.pushButton_2.setText(_translate("HomeScreen", "Virtual\n""Mode"))
        self.pushButton_3.setText(_translate("HomeScreen", "Presentation\n""Mode"))




#import sys
#app = QtWidgets.QApplication(sys.argv)
#home = QtWidgets.QMainWindow()
#ui = Ui_HomeScreen()
#ui.setupUi(home)
#home.show()
#sys.exit(app.exec_())